{"ast":null,"code":"var _jsxFileName = \"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onUpdateAvatar,\n    buttonState,\n    onValidate,\n    errorMessage\n  } = _ref;\n  const avatarRef = useRef();\n  useEffect(() => {\n    avatarRef.current.value = \"\";\n  }, [isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"profile-avatar\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    formName: \"profile-avatar\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onValidate: onValidate,\n    buttonState: buttonState,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      name: \"avatar\",\n      ref: avatarRef,\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      className: `popup__input popup__input_type_avatar ${errorMessage.avatar && \"popup__input_type_error\"}`,\n      id: \"url-input\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"url-input-error popup__error\",\n      children: errorMessage.avatar && errorMessage.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"i3A8oX/ZqNHll67C7LWBaRG0gLQ=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js"],"names":["useRef","useEffect","PopupWithForm","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","buttonState","onValidate","errorMessage","avatarRef","current","value","handleSubmit","e","preventDefault","avatar"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,eAAT,OAOG;AAAA;;AAAA,MAPsB;AACvBC,IAAAA,MADuB;AAEvBC,IAAAA,OAFuB;AAGvBC,IAAAA,cAHuB;AAIvBC,IAAAA,WAJuB;AAKvBC,IAAAA,UALuB;AAMvBC,IAAAA;AANuB,GAOtB;AACD,QAAMC,SAAS,GAAGV,MAAM,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,CAACC,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;AACD,GAFQ,EAEN,CAACR,MAAD,CAFM,CAAT;;AAIA,WAASS,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEAT,IAAAA,cAAc,CAAC;AACbU,MAAAA,MAAM,EAAEN,SAAS,CAACC,OAAV,CAAkBC;AADb,KAAD,CAAd;AAGD;;AAED,sBACE,QAAC,aAAD;AACE,IAAA,IAAI,EAAC,gBADP;AAEE,IAAA,MAAM,EAAER,MAFV;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,QAAQ,EAAEQ,YAJZ;AAKE,IAAA,KAAK,EAAC,uFALR;AAME,IAAA,QAAQ,EAAC,gBANX;AAOE,IAAA,UAAU,EAAC,wDAPb;AAQE,IAAA,UAAU,EAAEL,UARd;AASE,IAAA,WAAW,EAAED,WATf;AAAA,4BAWE;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,GAAG,EAAEG,SAHP;AAIE,MAAA,WAAW,EAAC,uHAJd;AAKE,MAAA,SAAS,EAAG,yCACVD,YAAY,CAACO,MAAb,IAAuB,yBACxB,EAPH;AAQE,MAAA,EAAE,EAAC,WARL;AASE,MAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,YAXF,eAsBE;AAAM,MAAA,SAAS,EAAC,8BAAhB;AAAA,gBACGP,YAAY,CAACO,MAAb,IAAuBP,YAAY,CAACO;AADvC;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAlDQb,e;;KAAAA,e;AAoDT,eAAeA,eAAf","sourcesContent":["import { useRef, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({\n  isOpen,\n  onClose,\n  onUpdateAvatar,\n  buttonState,\n  onValidate,\n  errorMessage,\n}) {\n  const avatarRef = useRef();\n\n  useEffect(() => {\n    avatarRef.current.value = \"\";\n  }, [isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"profile-avatar\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      title=\"Обновить аватар\"\n      formName=\"profile-avatar\"\n      buttonText=\"Сохранить\"\n      onValidate={onValidate}\n      buttonState={buttonState}\n    >\n      <input\n        type=\"url\"\n        name=\"avatar\"\n        ref={avatarRef}\n        placeholder=\"Ссылка на новый аватар\"\n        className={`popup__input popup__input_type_avatar ${\n          errorMessage.avatar && \"popup__input_type_error\"\n        }`}\n        id=\"url-input\"\n        required\n      />\n      <span className=\"url-input-error popup__error\">\n        {errorMessage.avatar && errorMessage.avatar}\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n"]},"metadata":{},"sourceType":"module"}