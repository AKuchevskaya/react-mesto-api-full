{"ast":null,"code":"var _jsxFileName = \"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onUpdateUser,\n    buttonState,\n    onValidate,\n    errorMessage\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState(\"\");\n  const [isNameValid, setNameValidity] = useState(false);\n  const [nameError, setNameError] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isDescriptionValid, setDescriptionValidity] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(\"\");\n  const [isFormValid, setValidityForm] = useState(false); // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleChangeName(e) {\n    const input = e.target;\n    setName(input.value);\n  }\n\n  function handleChangeDescription(e) {\n    const input = e.target;\n    setDescription(input.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"profile-redaction\",\n    isOpen: isOpen,\n    onClose: onClose,\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    formName: \"form-redaction\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onSubmit: handleSubmit,\n    onValidate: onValidate,\n    buttonState: buttonState,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChangeName,\n      type: \"text\",\n      name: \"name\",\n      value: name || \"\",\n      placeholder: \"\\u0424\\u0418\\u041E\",\n      className: `popup__input popup__input_type_name ${errorMessage.name && \"popup__input_type_error\"}`,\n      id: \"name-input\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"name-input-error popup__error\",\n      children: errorMessage.name && errorMessage.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChangeDescription,\n      type: \"text\",\n      name: \"vocation\",\n      value: description || \"\",\n      placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n      className: `popup__input popup__input_type_vocation ${errorMessage.vocation && \"popup__input_type_error\"}`,\n      id: \"vocation-input\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"vocation-input-error popup__error\",\n      children: errorMessage.vocation && errorMessage.vocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"bHjdUVjidj6wBmKO8vVwAFKGshQ=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/EditProfilePopup.js"],"names":["useState","useContext","useEffect","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","buttonState","onValidate","errorMessage","currentUser","name","setName","isNameValid","setNameValidity","nameError","setNameError","description","setDescription","isDescriptionValid","setDescriptionValidity","descriptionError","setDescriptionError","isFormValid","setValidityForm","about","handleChangeName","e","input","target","value","handleChangeDescription","handleSubmit","preventDefault","vocation"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser,\n  buttonState,\n  onValidate,\n  errorMessage,\n}) {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState(\"\");\n  const [isNameValid, setNameValidity] = useState(false);\n  const [nameError, setNameError] = useState(\"\");\n\n  const [description, setDescription] = useState(\"\");\n  const [isDescriptionValid, setDescriptionValidity] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(\"\");\n\n  const [isFormValid, setValidityForm] = useState(false);\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleChangeName(e) {\n    const input = e.target;\n\n    setName(input.value);\n  }\n  function handleChangeDescription(e) {\n    const input = e.target;\n\n    setDescription(input.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"profile-redaction\"\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Редактировать профиль\"\n      formName=\"form-redaction\"\n      buttonText=\"Сохранить\"\n      onSubmit={handleSubmit}\n      onValidate={onValidate}\n      buttonState={buttonState}\n    >\n      <input\n        onChange={handleChangeName}\n        type=\"text\"\n        name=\"name\"\n        value={name || \"\"}\n        placeholder=\"ФИО\"\n        className={`popup__input popup__input_type_name ${\n          errorMessage.name && \"popup__input_type_error\"\n        }`}\n        id=\"name-input\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n      />\n      <span className=\"name-input-error popup__error\">\n        {errorMessage.name && errorMessage.name}\n      </span>\n\n      <input\n        onChange={handleChangeDescription}\n        type=\"text\"\n        name=\"vocation\"\n        value={description || \"\"}\n        placeholder=\"О себе\"\n        className={`popup__input popup__input_type_vocation ${\n          errorMessage.vocation && \"popup__input_type_error\"\n        }`}\n        id=\"vocation-input\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n      />\n      <span className=\"vocation-input-error popup__error\">\n        {errorMessage.vocation && errorMessage.vocation}\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n"]},"metadata":{},"sourceType":"module"}