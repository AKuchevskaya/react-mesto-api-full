{"ast":null,"code":"export const BASE_URL = \"https://api.mesto.kuchevskaya.nomoredomains.xyz\";\n\nconst checkResponse = res => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: 'include',\n    // т.к. разрешила в браузере запросы c Allow-Credentials\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: 'include',\n    // т.к. разрешила в браузере запросы c Allow-Credentials\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\" // Authorization: `Bearer ${token}`,\n\n    },\n    credentials: 'include' // т.к. разрешила в браузере запросы c Allow-Credentials\n\n  }).then(checkResponse);\n};","map":{"version":3,"sources":["/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/utils/Auth.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","Accept","credentials","body","JSON","stringify","then","authorize","getContent","token"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,iDAAjB;;AAEP,MAAMC,aAAa,GAAIC,GAAD,IAAS;AAC7B,SAAOA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAA7B;AACD,CAFD;;AAIA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;AACjCY,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,WAAW,EAAE,SANoB;AAMT;AACxBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,MAAAA,KADmB;AAEnBC,MAAAA;AAFmB,KAAf;AAP2B,GAAvB,CAAL,CAWJS,IAXI,CAWClB,aAXD,CAAP;AAYD,CAbM;AAeP,OAAO,MAAMmB,SAAS,GAAG,CAACX,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;AACjCY,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,WAAW,EAAE,SANoB;AAMT;AACxBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,MAAAA,KADmB;AAEnBC,MAAAA;AAFmB,KAAf;AAP2B,GAAvB,CAAL,CAWJS,IAXI,CAWClB,aAXD,CAAP;AAYD,CAbM;AAeP,OAAO,MAAMoB,UAAU,GAAIC,KAAD,IAAW;AACnC,SAAOX,KAAK,CAAE,GAAEX,QAAS,WAAb,EAAyB;AACnCY,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT,CAGP;;AAHO,KAF0B;AAOnCC,IAAAA,WAAW,EAAE,SAPsB,CAOX;;AAPW,GAAzB,CAAL,CAQJI,IARI,CAQClB,aARD,CAAP;AASD,CAVM","sourcesContent":["export const BASE_URL = \"https://api.mesto.kuchevskaya.nomoredomains.xyz\";\n\nconst checkResponse = (res) => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: 'include', // т.к. разрешила в браузере запросы c Allow-Credentials\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  }).then(checkResponse);\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: 'include', // т.к. разрешила в браузере запросы c Allow-Credentials\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  }).then(checkResponse);\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      // Authorization: `Bearer ${token}`,\n    },\n    credentials: 'include', // т.к. разрешила в браузере запросы c Allow-Credentials\n  }).then(checkResponse);\n};\n"]},"metadata":{},"sourceType":"module"}