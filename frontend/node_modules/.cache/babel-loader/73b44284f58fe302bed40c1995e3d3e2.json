{"ast":null,"code":"var _jsxFileName = \"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport * as Auth from \"../utils/Auth.js\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/Api\";\nimport success from \"../../src/images/ok.svg\";\nimport error from \"../../src/images/error.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isQwestionPopupOpen, setQwestionPopupOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [removedCard, setRemovedCard] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userData, setUserData] = useState();\n  const history = useHistory();\n  const [isTooltipOpen, setTooltipOpen] = useState(false);\n  const [tooltip, setTooltip] = useState({\n    image: success,\n    message: \"Вы успешно зарегистрировались!\"\n  });\n  const [errorMessage, setErrorMessage] = useState({});\n  const [buttonState, setButtonState] = useState(true);\n\n  function tokenCheck() {\n    if (localStorage.getItem(\"token\")) {\n      let token = localStorage.getItem(\"token\");\n      Auth.getContent(token).then(res => {\n        const {\n          _id,\n          email\n        } = res.data;\n        setLoggedIn(true);\n        setUserData({ ...userData,\n          _id,\n          email\n        });\n      }).catch(err => {\n        console.log(`Ошибка проверки токена...: ${err}`);\n      });\n    }\n  }\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n  useEffect(() => {\n    if (loggedIn) {\n      history.push(\"/\");\n    }\n  }, [loggedIn]);\n  useEffect(() => {\n    if (loggedIn) {\n      Promise.all([//в Promise.all передаем массив промисов которые нужно выполнить\n      api.getInitialCards(), api.getProfile()]).then(_ref => {\n        let [cards, currentUser] = _ref;\n        setCards(cards);\n        setCurrentUser(currentUser);\n      }).catch(err => {\n        console.log(`Ошибка получения данных пользователя.....: ${err}`);\n      });\n    }\n  }, [loggedIn]);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(user => user._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(item => item._id === card._id ? newCard : item));\n    }).catch(err => {\n      console.log(`Ошибка обработки данных картинки.....: ${err}`);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(removedCard._id).then(() => {\n      setCards(state => state.filter(item => item._id !== removedCard._id));\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка удаления карточки.....: ${err}`);\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleButtonDeleteClick(card) {\n    setQwestionPopupOpen(true);\n    setRemovedCard(card);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      isOpened: true,\n      name: card.name,\n      link: card.link\n    });\n  }\n\n  function handleUpdateAvatar(_ref2) {\n    let {\n      avatar\n    } = _ref2;\n    api.editAvatar(avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка обновления аватара.....: ${err}`);\n    });\n  }\n\n  function handleUpdateUser(_ref3) {\n    let {\n      name,\n      about\n    } = _ref3;\n    api.editProfile(name, about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка обновления данных пользователя.....: ${err}`);\n    });\n  }\n\n  function handleAddPlaceSubmit(_ref4) {\n    let {\n      name,\n      link\n    } = _ref4;\n    api.addCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка добавления новой карточки.....: ${err}`);\n    });\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setQwestionPopupOpen(false);\n    setSelectedCard({ ...selectedCard,\n      isOpened: false\n    });\n    setTooltipOpen(false);\n  }\n\n  function handleRegister(_ref5) {\n    let {\n      email,\n      password\n    } = _ref5;\n    return Auth.register(email, password).then(res => {\n      const {\n        email\n      } = res.data;\n      setUserData({ ...userData,\n        email\n      });\n      setTooltipOpen(true);\n      setTooltip({\n        image: success,\n        message: \"Вы успешно зарегистрировались!\"\n      });\n      history.push(\"/signin\");\n    }).catch(err => {\n      console.log(`Ошибка регистрации...: ${err}`);\n      setTooltipOpen(true);\n      setTooltip({\n        image: error,\n        message: \"Что-то пошло не так! Попробуйте ещё раз.\"\n      });\n    });\n  }\n\n  function handleLogin(_ref6) {\n    let {\n      email,\n      password\n    } = _ref6;\n    return Auth.authorize(email, password).then(data => {\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        tokenCheck();\n      }\n    }).catch(err => {\n      console.log(`Ошибка авторизации...: ${err}`);\n      setTooltipOpen(true);\n      setTooltip({\n        image: error,\n        message: \"Что-то пошло не так! Попробуйте ещё раз.\"\n      });\n    });\n  }\n\n  function signOut() {\n    localStorage.removeItem(\"token\");\n    setLoggedIn(false);\n    setUserData({\n      _id: \"\",\n      email: \"\"\n    });\n    history.push(\"/signin\");\n  }\n\n  function checkInputValidity(evt) {\n    if (!evt.currentTarget.checkValidity()) {\n      setErrorMessage({ ...errorMessage,\n        [evt.target.name]: evt.target.validationMessage\n      });\n      setButtonState(true);\n    } else {\n      setErrorMessage({});\n      setButtonState(false);\n    }\n  }\n\n  useEffect(() => {\n    setErrorMessage({});\n    setButtonState(true);\n  }, [isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen]);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        userData: userData,\n        signOut: signOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          children: [/*#__PURE__*/_jsxDEV(Main, {\n            cards: cards,\n            onCardClick: handleCardClick,\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardLike: handleCardLike,\n            onCardButtonDeleteClick: handleButtonDeleteClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin,\n            tokenCheck: tokenCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        name: \"answer\",\n        isOpen: isTooltipOpen,\n        onClose: closeAllPopups,\n        tooltip: tooltip.image,\n        message: tooltip.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        onValidate: checkInputValidity,\n        buttonState: buttonState,\n        errorMessage: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        onValidate: checkInputValidity,\n        buttonState: buttonState,\n        errorMessage: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit,\n        onValidate: checkInputValidity,\n        buttonState: buttonState,\n        errorMessage: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n        isOpen: isQwestionPopupOpen,\n        onClose: closeAllPopups,\n        handleCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        selectedCard: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LKfjB0BTOMEPcz3mPz2cEcc/J/g=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/App.js"],"names":["useState","useEffect","Switch","Route","useHistory","Redirect","Header","Auth","ProtectedRoute","Register","Login","Main","Footer","InfoTooltip","EditProfilePopup","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","ImagePopup","CurrentUserContext","api","success","error","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isQwestionPopupOpen","setQwestionPopupOpen","currentUser","setCurrentUser","cards","setCards","selectedCard","setSelectedCard","removedCard","setRemovedCard","loggedIn","setLoggedIn","userData","setUserData","history","isTooltipOpen","setTooltipOpen","tooltip","setTooltip","image","message","errorMessage","setErrorMessage","buttonState","setButtonState","tokenCheck","localStorage","getItem","token","getContent","then","res","_id","email","data","catch","err","console","log","push","Promise","all","getInitialCards","getProfile","handleCardLike","card","isLiked","likes","some","user","changeLikeCardStatus","newCard","state","map","item","handleCardDelete","deleteCard","filter","closeAllPopups","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleButtonDeleteClick","handleCardClick","isOpened","name","link","handleUpdateAvatar","avatar","editAvatar","handleUpdateUser","about","editProfile","handleAddPlaceSubmit","addCard","handleRegister","password","register","handleLogin","authorize","setItem","signOut","removeItem","checkInputValidity","evt","currentTarget","checkValidity","target","validationMessage"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport * as Auth from \"../utils/Auth.js\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/Api\";\nimport success from \"../../src/images/ok.svg\";\nimport error from \"../../src/images/error.svg\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isQwestionPopupOpen, setQwestionPopupOpen] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [removedCard, setRemovedCard] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userData, setUserData] = useState();\n  const history = useHistory();\n  const [isTooltipOpen, setTooltipOpen] = useState(false);\n  const [tooltip, setTooltip] = useState({\n    image: success,\n    message: \"Вы успешно зарегистрировались!\",\n  });\n\n  const [errorMessage, setErrorMessage] = useState({});\n  const [buttonState, setButtonState] = useState(true);\n\n  function tokenCheck() {\n    if (localStorage.getItem(\"token\")) {\n      let token = localStorage.getItem(\"token\");\n      Auth.getContent(token)\n        .then((res) => {\n          const { _id, email } = res.data;\n          setLoggedIn(true);\n          setUserData({ ...userData, _id, email });\n        })\n        .catch((err) => {\n          console.log(`Ошибка проверки токена...: ${err}`);\n        });\n    }\n  }\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n  useEffect(() => {\n    if (loggedIn) {\n      history.push(\"/\");\n    }\n  }, [loggedIn]);\n\n  useEffect(() => {\n    if (loggedIn) {\n      Promise.all([\n        //в Promise.all передаем массив промисов которые нужно выполнить\n        api.getInitialCards(),\n        api.getProfile(),\n      ])\n        .then(([cards, currentUser]) => {\n          setCards(cards);\n          setCurrentUser(currentUser);\n        })\n        .catch((err) => {\n          console.log(`Ошибка получения данных пользователя.....: ${err}`);\n        });\n    }\n  }, [loggedIn]);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((user) => user._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((item) => (item._id === card._id ? newCard : item))\n        );\n      })\n      .catch((err) => {\n        console.log(`Ошибка обработки данных картинки.....: ${err}`);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(removedCard._id)\n      .then(() => {\n        setCards((state) =>\n          state.filter((item) => item._id !== removedCard._id)\n        );\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка удаления карточки.....: ${err}`);\n      });\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n  function handleButtonDeleteClick(card) {\n    setQwestionPopupOpen(true);\n    setRemovedCard(card);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      isOpened: true,\n      name: card.name,\n      link: card.link,\n    });\n  }\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .editAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка обновления аватара.....: ${err}`);\n      });\n  }\n  function handleUpdateUser({ name, about }) {\n    api\n      .editProfile(name, about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка обновления данных пользователя.....: ${err}`);\n      });\n  }\n\n  function handleAddPlaceSubmit({ name, link }) {\n    api\n      .addCard(name, link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка добавления новой карточки.....: ${err}`);\n      });\n  }\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setQwestionPopupOpen(false);\n    setSelectedCard({ ...selectedCard, isOpened: false });\n    setTooltipOpen(false);\n  }\n  function handleRegister({ email, password }) {\n    return Auth.register(email, password)\n      .then((res) => {\n        const { email } = res.data;\n        setUserData({ ...userData, email });\n        setTooltipOpen(true);\n        setTooltip({\n          image: success,\n          message: \"Вы успешно зарегистрировались!\",\n        });\n        history.push(\"/signin\");\n      })\n      .catch((err) => {\n        console.log(`Ошибка регистрации...: ${err}`);\n        setTooltipOpen(true);\n\n        setTooltip({\n          image: error,\n          message: \"Что-то пошло не так! Попробуйте ещё раз.\",\n        });\n      });\n  }\n\n  function handleLogin({ email, password }) {\n    return Auth.authorize(email, password)\n      .then((data) => {\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token);\n          tokenCheck();\n        }\n      })\n      .catch((err) => {\n        console.log(`Ошибка авторизации...: ${err}`);\n        setTooltipOpen(true);\n        setTooltip({\n          image: error,\n          message: \"Что-то пошло не так! Попробуйте ещё раз.\",\n        });\n      });\n  }\n\n  function signOut() {\n    localStorage.removeItem(\"token\");\n    setLoggedIn(false);\n    setUserData({ _id: \"\", email: \"\" });\n    history.push(\"/signin\");\n  }\n\n  function checkInputValidity(evt) {\n    if (!evt.currentTarget.checkValidity()) {\n      setErrorMessage({\n        ...errorMessage,\n        [evt.target.name]: evt.target.validationMessage,\n      });\n      setButtonState(true);\n    } else {\n      setErrorMessage({});\n      setButtonState(false);\n    }\n  }\n\n  useEffect(() => {\n    setErrorMessage({});\n    setButtonState(true);\n  }, [isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <Header loggedIn={loggedIn} userData={userData} signOut={signOut} />\n        <Switch>\n          <ProtectedRoute exact path=\"/\" loggedIn={loggedIn}>\n            <Main\n              cards={cards}\n              onCardClick={handleCardClick}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardLike={handleCardLike}\n              onCardButtonDeleteClick={handleButtonDeleteClick}\n            />\n            <Footer />\n          </ProtectedRoute>\n\n          <Route path=\"/signup\">\n            <Register handleRegister={handleRegister} />\n          </Route>\n          <Route path=\"/signin\">\n            <Login handleLogin={handleLogin} tokenCheck={tokenCheck} />\n          </Route>\n          <Route>\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n          </Route>\n        </Switch>\n        <InfoTooltip\n          name=\"answer\"\n          isOpen={isTooltipOpen}\n          onClose={closeAllPopups}\n          tooltip={tooltip.image}\n          message={tooltip.message}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          onValidate={checkInputValidity}\n          buttonState={buttonState}\n          errorMessage={errorMessage}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          onValidate={checkInputValidity}\n          buttonState={buttonState}\n          errorMessage={errorMessage}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          onValidate={checkInputValidity}\n          buttonState={buttonState}\n          errorMessage={errorMessage}\n        />\n\n        <DeleteCardPopup\n          isOpen={isQwestionPopupOpen}\n          onClose={closeAllPopups}\n          handleCardDelete={handleCardDelete}\n        />\n\n        <ImagePopup selectedCard={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}