{"ast":null,"code":"var _jsxFileName = \"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(_ref) {\n  _s();\n\n  let {\n    card,\n    onCardClick,\n    onCardLike,\n    onCardButtonDeleteClick\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = card.owner._id === currentUser._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `cards__button-delete ${isOwn ? \"cards__button-delete_active\" : \" \"}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `cards__button-like ${isLiked ? \"cards__button-like_active\" : \" \"}`;\n\n  const handleClick = () => {\n    onCardClick(card);\n  };\n\n  const handleLikeClick = () => {\n    onCardLike(card);\n  }; // const handleDeleteClick = () => {\n  //   onCardDelete(card);\n  // };\n\n\n  const handleButtonDeleteClick = () => {\n    onCardButtonDeleteClick(card);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"cards__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: handleClick,\n        src: card.link,\n        alt: card.name,\n        className: \"cards__image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonDeleteClick,\n        type: \"button\",\n        className: cardDeleteButtonClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"cards__title\",\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards__reaction\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLikeClick,\n            type: \"button\",\n            className: cardLikeButtonClassName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cards__span\",\n            children: card.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, card._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Card.js"],"names":["useContext","CurrentUserContext","Card","card","onCardClick","onCardLike","onCardButtonDeleteClick","currentUser","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","handleLikeClick","handleButtonDeleteClick","link","name","length"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,IAAT,OAA0E;AAAA;;AAAA,MAA5D;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA;AAAjC,GAA4D;AACxE,QAAMC,WAAW,GAAGP,UAAU,CAACC,kBAAD,CAA9B,CADwE,CAGxE;;AACA,QAAMO,KAAK,GAAGL,IAAI,CAACM,KAAL,CAAWC,GAAX,KAAmBH,WAAW,CAACG,GAA7C,CAJwE,CAKxE;;AACA,QAAMC,yBAAyB,GAAI,wBACjCH,KAAK,GAAG,6BAAH,GAAmC,GACzC,EAFD,CANwE,CAUxE;;AACA,QAAMI,OAAO,GAAGT,IAAI,CAACU,KAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUH,WAAW,CAACG,GAA7C,CAAhB,CAXwE,CAYxE;;AACA,QAAMM,uBAAuB,GAAI,sBAC/BJ,OAAO,GAAG,2BAAH,GAAiC,GACzC,EAFD;;AAMA,QAAMK,WAAW,GAAG,MAAM;AACxBb,IAAAA,WAAW,CAACD,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMe,eAAe,GAAG,MAAM;AAC5Bb,IAAAA,UAAU,CAACF,IAAD,CAAV;AACD,GAFD,CAvBwE,CA2BxE;AACA;AAEA;;;AAEA,QAAMgB,uBAAuB,GAAG,MAAM;AAEpCb,IAAAA,uBAAuB,CAACH,IAAD,CAAvB;AACD,GAHD;;AAKA,sBACE;AAAS,IAAA,SAAS,EAAC,kBAAnB;AAAA,2BACE;AAAoB,MAAA,SAAS,EAAC,aAA9B;AAAA,8BACE;AACE,QAAA,OAAO,EAAEc,WADX;AAEE,QAAA,GAAG,EAAEd,IAAI,CAACiB,IAFZ;AAGE,QAAA,GAAG,EAAEjB,IAAI,CAACkB,IAHZ;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,OAAO,EAAEF,uBADX;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,SAAS,EAAER;AAHb;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,oBAA8BR,IAAI,CAACkB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AACE,YAAA,OAAO,EAAEH,eADX;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAEF;AAHb;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA,sBAA+Bb,IAAI,CAACU,KAAL,CAAWS;AAA1C;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA,OAAUnB,IAAI,CAACO,GAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAjEQR,I;;KAAAA,I;AAmET,eAAeA,IAAf","sourcesContent":["import { useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onCardClick, onCardLike, onCardButtonDeleteClick }) {\n  const currentUser = useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = `cards__button-delete ${\n    isOwn ? \"cards__button-delete_active\" : \" \"\n  }`;\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `cards__button-like ${\n    isLiked ? \"cards__button-like_active\" : \" \"\n  }`;\n\n  \n\n  const handleClick = () => {\n    onCardClick(card);\n  };\n\n  const handleLikeClick = () => {\n    onCardLike(card);\n  };\n\n  // const handleDeleteClick = () => {\n  //   onCardDelete(card);\n\n  // };\n\n  const handleButtonDeleteClick = () => {\n\n    onCardButtonDeleteClick(card);\n  };\n\n  return (\n    <article className=\"cards__container\">\n      <div key={card._id} className=\"cards__item\">\n        <img\n          onClick={handleClick}\n          src={card.link}\n          alt={card.name}\n          className=\"cards__image\"\n        />\n        <button\n          onClick={handleButtonDeleteClick}\n          type=\"button\"\n          className={cardDeleteButtonClassName}\n        ></button>\n        <div className=\"cards__description\">\n          <h2 className=\"cards__title\">{card.name}</h2>\n          <div className=\"cards__reaction\">\n            <button\n              onClick={handleLikeClick}\n              type=\"button\"\n              className={cardLikeButtonClassName}\n            ></button>\n            <span className=\"cards__span\">{card.likes.length}</span>\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}