[{"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/index.js":"1","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/reportWebVitals.js":"2","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/App.js":"3","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/utils/Auth.js":"4","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/InfoTooltip.js":"5","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Register.js":"6","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/ProtectedRoute.js":"7","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Header.js":"8","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Footer.js":"9","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Login.js":"10","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js":"11","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Main.js":"12","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/AddPlacePopup.js":"13","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/EditProfilePopup.js":"14","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/ImagePopup.js":"15","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/DeleteCardPopup.js":"16","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/utils/Api.js":"17","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js":"18","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/PopupWithForm.js":"19","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Card.js":"20"},{"size":642,"mtime":1658576106401,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1658576106402,"results":"23","hashOfConfig":"22"},{"size":10891,"mtime":1658615900659,"results":"24","hashOfConfig":"22"},{"size":1390,"mtime":1658613515409,"results":"25","hashOfConfig":"22"},{"size":538,"mtime":1658576106372,"results":"26","hashOfConfig":"22"},{"size":1839,"mtime":1658576106373,"results":"27","hashOfConfig":"22"},{"size":310,"mtime":1658576106373,"results":"28","hashOfConfig":"22"},{"size":1065,"mtime":1658609146418,"results":"29","hashOfConfig":"22"},{"size":250,"mtime":1658576106372,"results":"30","hashOfConfig":"22"},{"size":1591,"mtime":1658576106372,"results":"31","hashOfConfig":"22"},{"size":1255,"mtime":1658576106371,"results":"32","hashOfConfig":"22"},{"size":1859,"mtime":1658576106372,"results":"33","hashOfConfig":"22"},{"size":1992,"mtime":1658576106370,"results":"34","hashOfConfig":"22"},{"size":3019,"mtime":1658576106371,"results":"35","hashOfConfig":"22"},{"size":1321,"mtime":1658576106372,"results":"36","hashOfConfig":"22"},{"size":548,"mtime":1658576106371,"results":"37","hashOfConfig":"22"},{"size":2632,"mtime":1658613515408,"results":"38","hashOfConfig":"22"},{"size":83,"mtime":1658576106373,"results":"39","hashOfConfig":"22"},{"size":1496,"mtime":1658576106372,"results":"40","hashOfConfig":"22"},{"size":2239,"mtime":1658599113884,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u4a6ii",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/index.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/reportWebVitals.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/App.js",["106"],[],"import { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport * as Auth from \"../utils/Auth.js\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/Api\";\nimport success from \"../../src/images/ok.svg\";\nimport error from \"../../src/images/error.svg\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isQwestionPopupOpen, setQwestionPopupOpen] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [removedCard, setRemovedCard] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userData, setUserData] = useState();\n  const history = useHistory();\n  const [isTooltipOpen, setTooltipOpen] = useState(false);\n  const [tooltip, setTooltip] = useState({\n    image: success,\n    message: \"Вы успешно зарегистрировались!\",\n  });\n\n  const [errorMessage, setErrorMessage] = useState({});\n  const [buttonState, setButtonState] = useState(true);\n\n  function tokenCheck() {\n    if (localStorage.getItem(\"jwt\")) {\n    //if (localStorage.getItem(\"email\")) {\n      let token = localStorage.getItem(\"jwt\");\n      Auth.getContent(token)\n      //Auth.getContent()\n        .then((res) => {\n          //const { _id, email } = res.data;\n          //const { email } = res.data;\n          setLoggedIn(true);\n          \n          //setUserData({ _id, email });\n          setUserData(res.email);\n          // setUserData({ ...userData, _id, email });\n        })\n        .then((res) => {\n\t\t\t\t\thistory.push('/');\n\t\t\t\t})\n        .catch((err) => {\n          console.log(`Ошибка проверки токена...: ${err}`);\n        });\n    }\n  }\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n  // useEffect(() => {\n  //   if (loggedIn) {\n  //     history.push(\"/\");\n  //   }\n  // }, [loggedIn]);\n\n  useEffect(() => {\n    if (loggedIn) {\n      Promise.all([\n        //в Promise.all передаем массив промисов которые нужно выполнить\n        api.getInitialCards(),\n        api.getProfile(),\n      ])\n        .then(([cards, currentUser]) => {\n          setCards(cards);\n          setCurrentUser(currentUser);\n        })\n        .catch((err) => {\n          console.log(`Ошибка получения данных пользователя.....: ${err}`);\n        });\n        //history.push(\"/\");\n    }\n  }, [loggedIn]);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((u) => u === currentUser._id);\n    //const isLiked = card.likes.some((user) => user._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n        // state.map((item) => (item === card._id ? newCard : item))\n        state.map((item) => (item._id === card._id ? newCard : item))\n        );\n      })\n      .catch((err) => {\n        console.log(`Ошибка обработки данных картинки.....: ${err}`);\n      });\n  }\n\n  function handleCardDelete() {\n    api\n      .deleteCard(removedCard._id)\n      .then(() => {\n        setCards((state) =>\n          state.filter((item) => item._id !== removedCard._id)\n        );\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка удаления карточки.....: ${err}`);\n      });\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n  function handleButtonDeleteClick(card) {\n    setQwestionPopupOpen(true);\n    setRemovedCard(card);\n  }\n\n  function handleCardClick(card) {\n    //заменить на просто setSelectedCard(card);\n    setSelectedCard({\n      isOpened: true,\n      name: card.name,\n      link: card.link,\n    });\n  }\n  function handleUpdateAvatar(avatar) {\n    api\n      .editAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка обновления аватара.....: ${err}`);\n      });\n  }\n  \n  function handleUpdateUser(currentUser) {\n    api\n      .editProfile(currentUser)\n      .then((currentUser) => {\n        setCurrentUser(currentUser);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка обновления данных пользователя.....: ${err}`);\n      });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api\n      .addCard(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка добавления новой карточки.....: ${err}`);\n      });\n  }\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setQwestionPopupOpen(false);\n    setSelectedCard({ ...selectedCard, isOpened: false });\n    setTooltipOpen(false);\n  }\n  function handleRegister(email, password) {\n    return Auth.register(email, password)\n      .then((res) => {\n        //const { email } = res.email;\n        //const { email } = res;\n        //setUserData({ ...userData, email });\n        if (res) {\n          history.push(\"/signin\");\n          setTooltipOpen(true);\n          setTooltip({\n            image: success,\n            message: \"Вы успешно зарегистрировались!\",\n          });\n        } else {\n          setTooltipOpen(true);\n          setTooltip({\n            image: success,\n            message: \"Что-то пошло не так! Попробуйте ещё раз.\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(`Ошибка регистрации...: ${err}`);\n        setTooltipOpen(true);\n\n        setTooltip({\n          image: error,\n          message: \"Что-то пошло не так! Попробуйте ещё раз.\",\n        });\n      });\n  }\n\n  function handleLogin(email, password) {\n    return Auth.authorize(email, password)\n      .then((data) => {\n        if (data.token) {\n          localStorage.setItem('jwt', data.token);\n          tokenCheck();\n          setUserData(data.email);\n          setLoggedIn(true);\n          history.push('/');\n        }\n          //setUserData({ email: data.email });\n          //setUserData({ _id: data._id, email: data.email });\n          //setLoggedIn(true);\n          //history.push('/');\n        \n      })\n      .catch((err) => {\n        console.log(`Ошибка авторизации...: ${err}`);\n        setTooltipOpen(true);\n        setTooltip({\n          image: error,\n          message: \"Что-то пошло не так! Попробуйте ещё раз.\",\n        });\n      });\n  }\n\n  function handleSignOut() {\n    //localStorage.removeItem(\"email\");\n    Auth.signOut();\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n    setUserData({ email: \"\" });\n    history.push(\"/signin\");\n  }\n\n  function checkInputValidity(evt) {\n    if (!evt.currentTarget.checkValidity()) {\n      setErrorMessage({\n        ...errorMessage,\n        [evt.target.name]: evt.target.validationMessage,\n      });\n      setButtonState(true);\n    } else {\n      setErrorMessage({});\n      setButtonState(false);\n    }\n  }\n\n  useEffect(() => {\n    setErrorMessage({});\n    setButtonState(true);\n  }, [isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <Header loggedIn={loggedIn} userData={userData} handleSignOut={handleSignOut} />\n        <Switch>\n          <ProtectedRoute exact path=\"/\" loggedIn={loggedIn}>\n            <Main\n              cards={cards}\n              onCardClick={handleCardClick}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardLike={handleCardLike}\n              onCardButtonDeleteClick={handleButtonDeleteClick}\n            />\n            <Footer />\n          </ProtectedRoute>\n\n          <Route path=\"/signup\">\n            <Register handleRegister={handleRegister} />\n          </Route>\n          <Route path=\"/signin\">\n            <Login handleLogin={handleLogin} tokenCheck={tokenCheck} />\n          </Route>\n          <Route>\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n          </Route>\n        </Switch>\n        <InfoTooltip\n          name=\"answer\"\n          isOpen={isTooltipOpen}\n          onClose={closeAllPopups}\n          tooltip={tooltip.image}\n          message={tooltip.message}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          onValidate={checkInputValidity}\n          buttonState={buttonState}\n          errorMessage={errorMessage}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          onValidate={checkInputValidity}\n          buttonState={buttonState}\n          errorMessage={errorMessage}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          onValidate={checkInputValidity}\n          buttonState={buttonState}\n          errorMessage={errorMessage}\n        />\n\n        <DeleteCardPopup\n          isOpen={isQwestionPopupOpen}\n          onClose={closeAllPopups}\n          handleCardDelete={handleCardDelete}\n        />\n\n        <ImagePopup selectedCard={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/utils/Auth.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/InfoTooltip.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Register.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/ProtectedRoute.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Header.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Footer.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Login.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Main.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/AddPlacePopup.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/EditProfilePopup.js",["107","108","109","110","111","112","113","114","115","116"],[],"import { useState, useContext, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser,\n  buttonState,\n  onValidate,\n  errorMessage,\n}) {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState(\"\");\n  const [isNameValid, setNameValidity] = useState(false);\n  const [nameError, setNameError] = useState(\"\");\n\n  const [description, setDescription] = useState(\"\");\n  const [isDescriptionValid, setDescriptionValidity] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(\"\");\n\n  const [isFormValid, setValidityForm] = useState(false);\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleChangeName(e) {\n    const input = e.target;\n\n    setName(input.value);\n  }\n  function handleChangeDescription(e) {\n    const input = e.target;\n\n    setDescription(input.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"profile-redaction\"\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Редактировать профиль\"\n      formName=\"form-redaction\"\n      buttonText=\"Сохранить\"\n      onSubmit={handleSubmit}\n      onValidate={onValidate}\n      buttonState={buttonState}\n    >\n      <input\n        onChange={handleChangeName}\n        type=\"text\"\n        name=\"name\"\n        value={name || \"\"}\n        placeholder=\"ФИО\"\n        className={`popup__input popup__input_type_name ${\n          errorMessage.name && \"popup__input_type_error\"\n        }`}\n        id=\"name-input\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n      />\n      <span className=\"name-input-error popup__error\">\n        {errorMessage.name && errorMessage.name}\n      </span>\n\n      <input\n        onChange={handleChangeDescription}\n        type=\"text\"\n        name=\"vocation\"\n        value={description || \"\"}\n        placeholder=\"О себе\"\n        className={`popup__input popup__input_type_vocation ${\n          errorMessage.vocation && \"popup__input_type_error\"\n        }`}\n        id=\"vocation-input\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n      />\n      <span className=\"vocation-input-error popup__error\">\n        {errorMessage.vocation && errorMessage.vocation}\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/ImagePopup.js",["117"],[],"import React, { useEffect } from \"react\";\n\nfunction ImagePopup({ selectedCard, onClose }) {\n  useEffect(() => {\n    if (!selectedCard.isOpened) return;\n\n    function handleEsc(e) {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    }\n\n    function hundleClick(evt) {\n      if (evt.target.classList.contains(\"popup_opened\")) {\n        onClose();\n      }\n    }\n\n    document.addEventListener(\"keydown\", handleEsc);\n    document.addEventListener(\"click\", hundleClick);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleEsc);\n      document.removeEventListener(\"click\", hundleClick);\n    };\n  }, [selectedCard.isOpened]);\n\n  return (\n    <div\n      className={`popup popup_card-review ${\n        selectedCard.isOpened && \"popup_opened\"\n      }`}\n    >\n      <div className=\"popup__box\">\n        <button\n          onClick={onClose}\n          type=\"button\"\n          className=\"popup__close popup__close-card\"\n        ></button>\n        <figure className=\"popup__figure\">\n          <img\n            className=\"popup__card\"\n            src={selectedCard.link}\n            alt={selectedCard.name}\n          />\n          <figcaption className=\"popup__figcaption\">\n            {selectedCard.name}\n          </figcaption>\n        </figure>\n      </div>\n    </div>\n  );\n}\nexport default ImagePopup;\n","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/DeleteCardPopup.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/utils/Api.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js",[],[],"/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/PopupWithForm.js",["118"],[],"import React, { useEffect } from \"react\";\n\nfunction PopupWithForm({\n  name,\n  isOpen,\n  onClose,\n  title,\n  onSubmit,\n  formName,\n  children,\n  buttonText,\n  onValidate,\n  buttonState,\n}) {\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n\n    function handleEsc(e) {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    }\n    function hundleClick(evt) {\n      if (evt.target.classList.contains(\"popup_opened\")) {\n        onClose();\n      }\n    }\n\n    document.addEventListener(\"keydown\", handleEsc);\n    document.addEventListener(\"click\", hundleClick);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEsc);\n      document.removeEventListener(\"click\", hundleClick);\n    };\n  }, [isOpen]);\n\n  return (\n    <div className={`popup popup_${name} ${isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container\">\n        <button\n          type=\"button\"\n          className=\"popup__close\"\n          onClick={onClose}\n        ></button>\n        <h3 className=\"popup__title\">{title}</h3>\n        <form\n          name={formName}\n          onSubmit={onSubmit}\n          className={`popup__form  popup__${formName}`}\n          onChange={onValidate}\n          noValidate\n        >\n          {children}\n          <button\n            type=\"submit\"\n            className={`popup__save ${buttonState && \"popup__save_inactive\"}`}\n          >\n            {buttonText}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\nexport default PopupWithForm;\n","/Users/alenakuchevskaya/Desktop/react-mesto-api-full/frontend/src/components/Card.js",[],[],{"ruleId":"119","severity":1,"message":"120","line":69,"column":6,"nodeType":"121","endLine":69,"endColumn":8,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":15,"column":10,"nodeType":"125","messageId":"126","endLine":15,"endColumn":21},{"ruleId":"123","severity":1,"message":"127","line":15,"column":23,"nodeType":"125","messageId":"126","endLine":15,"endColumn":38},{"ruleId":"123","severity":1,"message":"128","line":16,"column":10,"nodeType":"125","messageId":"126","endLine":16,"endColumn":19},{"ruleId":"123","severity":1,"message":"129","line":16,"column":21,"nodeType":"125","messageId":"126","endLine":16,"endColumn":33},{"ruleId":"123","severity":1,"message":"130","line":19,"column":10,"nodeType":"125","messageId":"126","endLine":19,"endColumn":28},{"ruleId":"123","severity":1,"message":"131","line":19,"column":30,"nodeType":"125","messageId":"126","endLine":19,"endColumn":52},{"ruleId":"123","severity":1,"message":"132","line":20,"column":10,"nodeType":"125","messageId":"126","endLine":20,"endColumn":26},{"ruleId":"123","severity":1,"message":"133","line":20,"column":28,"nodeType":"125","messageId":"126","endLine":20,"endColumn":47},{"ruleId":"123","severity":1,"message":"134","line":22,"column":10,"nodeType":"125","messageId":"126","endLine":22,"endColumn":21},{"ruleId":"123","severity":1,"message":"135","line":22,"column":23,"nodeType":"125","messageId":"126","endLine":22,"endColumn":38},{"ruleId":"119","severity":1,"message":"136","line":26,"column":6,"nodeType":"121","endLine":26,"endColumn":29,"suggestions":"137"},{"ruleId":"119","severity":1,"message":"136","line":37,"column":6,"nodeType":"121","endLine":37,"endColumn":14,"suggestions":"138"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["139"],"no-unused-vars","'isNameValid' is assigned a value but never used.","Identifier","unusedVar","'setNameValidity' is assigned a value but never used.","'nameError' is assigned a value but never used.","'setNameError' is assigned a value but never used.","'isDescriptionValid' is assigned a value but never used.","'setDescriptionValidity' is assigned a value but never used.","'descriptionError' is assigned a value but never used.","'setDescriptionError' is assigned a value but never used.","'isFormValid' is assigned a value but never used.","'setValidityForm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["140"],["141"],{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [tokenCheck]",{"range":"148","text":"149"},"Update the dependencies array to be: [onClose, selectedCard.isOpened]",{"range":"150","text":"151"},"Update the dependencies array to be: [isOpen, onClose]",{"range":"152","text":"153"},[2477,2479],"[tokenCheck]",[626,649],"[onClose, selectedCard.isOpened]",[721,729],"[isOpen, onClose]"]